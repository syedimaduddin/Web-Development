{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","modeText","TextForm","useState","text","setText","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","toFixed","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","aboutText","App","setAlert","message","setTimeout","setMode","setModeText","body","style","backgroundColor","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0f9c9d67.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} my-3`}>\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.modeText}</label>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { \r\n    title: PropTypes.string.isRequired, \r\n    aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = { \r\n    title: \"SIU\", \r\n    aboutText: \"Machines\",\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase!\", 'success');\r\n    }\r\n\r\n    const handleDownClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase!\", 'success');\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    \r\n    const handleCopy = () =>{\r\n        let text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to clipboard!\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = () =>{\r\n        let newText = text.split(/[ ]+/);                // here we use \"RegEx\" function. (RegEx -> regular expression) \r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra Spaces removed!\", 'success');\r\n    }\r\n\r\n    const clearAll = () => {\r\n        setText(\"\");\r\n        props.showAlert(\"Text Cleared!\", 'success');\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h3>{props.heading}</h3>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} /*style={{backgroundColor: props.mode==='light'?'white':'grey', color: props.mode==='light'?'black':'white'}}*/ onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleDownClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={clearAll}>Clear Text</button>\r\n        </div>\r\n        <div className=\"container\">\r\n            <hr/>\r\n            <h4><em><u>Your text summary</u></em></h4>\r\n            <p>{text.split(\" \").length} words, {text.length} characters</p>\r\n            <p>{(0.008 * text.split(\" \").length).toFixed(2)} Minutes read</p>\r\n            <hr />\r\n            <h4><em><u>Preview</u></em></h4>\r\n            <p>{text.length>0?text:\"-> Enter something in the textbox above to preview it here.\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}","// import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n// import About from './components/About';\n// import Imad from './components/Imad';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n//let name = \"Imad\";                // Here we made a variable to use in our JSX.\nfunction App() {\n  const [alert, setAlert] = useState(null)\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const [mode, setMode] = useState('light');\n\n  const [modeText, setModeText] = useState(\"Enable Dark Mode\");\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      setModeText(\"Enable Light Mode\");\n      document.body.style.backgroundColor = '#042743';\n      document.body.style.color = 'white';\n      showAlert(\"Dark mode has been enabled.\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n      // setInterval(() => {\n      //   document.title = 'TextUtils is Amazing.'\n      // }, 1500);\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils Now.'\n      // }, 1000);\n\n    }\n    else {\n      setMode('light');\n      setModeText(\"Enable Dark Mode\");\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      showAlert(\"Light mode has been enabled.\", \"success\");\n      document.title = 'TextUtils - Light Mode';\n    }\n\n  }\n  return (                        // In react we only return one function. So, we can use \"div\" or we can use \"JSX Fragment(<></>)\"\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n    <>\n      {/* Here we use JSX Fragment(<> </>) */}\n      {/* <nav>\n      <li>Home</li>\n      <li>About</li>\n      <li>Contact</li>\n    </nav>\n    <h2>hello world!</h2>\n    <p>My name is {name}</p> */}\n      {/* <Router>                  this is because we need to wrap every thing in router. */}\n        <Navbar title=\"textUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} modeText={modeText} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n\n          {/* <Switch> */}\n            {/* <Route exact path=\"/about\">          we can also write only \"path\" at the place of exact path. but react do partial match if we use only \"path\" which is not good.\n              <About />\n            </Route>\n            <Route exact path=\"/\">                    thats why we use \"exact path\" at the place of path */}\n              <TextForm heading=\"Enter the text below to analyse : \" showAlert={showAlert} mode={mode} />\n            {/* </Route>\n          </Switch> */}\n\n          {/* <Imad/> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}